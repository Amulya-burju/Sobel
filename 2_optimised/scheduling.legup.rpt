//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jul 26 12:56:54 2015
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Fri Apr 19 13:58:36 2019
//----------------------------------------------------------------------------//

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: main
state: LEGUP_0
   Transition: if (start): LEGUP_F_main_BB__0_1 default: LEGUP_0
state: LEGUP_F_main_BB__0_1
   %sobel_output = alloca [512 x [512 x i8]], align 1 (endState: LEGUP_F_main_BB__0_1)
   br label %.preheader.i
   Transition: default: LEGUP_F_main_BB_preheaderi_2
state: LEGUP_F_main_BB_preheaderi_2
   %indvar7 = phi i32 [ %indvar.next8, %.preheader..preheader_crit_edge.i ], [ 0, %0 ] (endState: LEGUP_F_main_BB_preheaderi_2)
   %y.08.i = phi i32 [ %3, %.preheader..preheader_crit_edge.i ], [ 1, %0 ] (endState: LEGUP_F_main_BB_preheaderi_2)
   %x.07.i = phi i32 [ %..i, %.preheader..preheader_crit_edge.i ], [ 0, %0 ] (endState: LEGUP_F_main_BB_preheaderi_2)
   call void @__legup_label(i8* getelementptr inbounds ([5 x i8]* @.str, i32 0, i32 0)) #2 (endState: LEGUP_F_main_BB_preheaderi_2)
   %1 = icmp eq i32 %x.07.i, 510 (endState: LEGUP_F_main_BB_preheaderi_2)
   %2 = zext i1 %1 to i32 (endState: LEGUP_F_main_BB_preheaderi_2)
   %3 = add nsw i32 %2, %y.08.i (endState: LEGUP_F_main_BB_preheaderi_2)
   %4 = add nsw i32 %x.07.i, 1 (endState: LEGUP_F_main_BB_preheaderi_2)
   %..i = select i1 %1, i32 1, i32 %4 (endState: LEGUP_F_main_BB_preheaderi_2)
   %5 = add nsw i32 %..i, -1 (endState: LEGUP_F_main_BB_preheaderi_2)
   %6 = add nsw i32 %3, -1 (endState: LEGUP_F_main_BB_preheaderi_2)
   %15 = add nsw i32 %..i, 1 (endState: LEGUP_F_main_BB_preheaderi_2)
   %31 = add nsw i32 %3, 1 (endState: LEGUP_F_main_BB_preheaderi_2)
   %exitcond9 = icmp eq i32 %indvar7, 260099 (endState: LEGUP_F_main_BB_preheaderi_2)
   Transition: default: LEGUP_F_main_BB_preheaderi_3
state: LEGUP_F_main_BB_preheaderi_3
   %7 = getelementptr inbounds [512 x [512 x i8]]* @elaine_512_input, i32 0, i32 %6, i32 %5 (endState: LEGUP_F_main_BB_preheaderi_3)
   %10 = getelementptr inbounds [512 x [512 x i8]]* @elaine_512_input, i32 0, i32 %6, i32 %..i (endState: LEGUP_F_main_BB_preheaderi_3)
   %11 = load i8* %10, align 1, !tbaa !1 (endState: LEGUP_F_main_BB_preheaderi_4)
   %16 = getelementptr inbounds [512 x [512 x i8]]* @elaine_512_input, i32 0, i32 %6, i32 %15 (endState: LEGUP_F_main_BB_preheaderi_3)
   %21 = getelementptr inbounds [512 x [512 x i8]]* @elaine_512_input, i32 0, i32 %3, i32 %5 (endState: LEGUP_F_main_BB_preheaderi_3)
   %26 = getelementptr inbounds [512 x [512 x i8]]* @elaine_512_input, i32 0, i32 %3, i32 %15 (endState: LEGUP_F_main_BB_preheaderi_3)
   %27 = load i8* %26, align 1, !tbaa !1 (endState: LEGUP_F_main_BB_preheaderi_4)
   %32 = getelementptr inbounds [512 x [512 x i8]]* @elaine_512_input, i32 0, i32 %31, i32 %5 (endState: LEGUP_F_main_BB_preheaderi_3)
   %37 = getelementptr inbounds [512 x [512 x i8]]* @elaine_512_input, i32 0, i32 %31, i32 %..i (endState: LEGUP_F_main_BB_preheaderi_3)
   %42 = getelementptr inbounds [512 x [512 x i8]]* @elaine_512_input, i32 0, i32 %31, i32 %15 (endState: LEGUP_F_main_BB_preheaderi_3)
   %57 = getelementptr inbounds [512 x [512 x i8]]* %sobel_output, i32 0, i32 %3, i32 %..i (endState: LEGUP_F_main_BB_preheaderi_3)
   Transition: default: LEGUP_F_main_BB_preheaderi_4
state: LEGUP_F_main_BB_preheaderi_4
   %8 = load i8* %7, align 1, !tbaa !1 (endState: LEGUP_F_main_BB_preheaderi_5)
   %12 = zext i8 %11 to i32 (endState: LEGUP_F_main_BB_preheaderi_4)
   %13 = mul nsw i32 %12, -2 (endState: LEGUP_F_main_BB_preheaderi_5)
   %17 = load i8* %16, align 1, !tbaa !1 (endState: LEGUP_F_main_BB_preheaderi_5)
   %28 = zext i8 %27 to i32 (endState: LEGUP_F_main_BB_preheaderi_4)
   %29 = mul nsw i32 %28, -2 (endState: LEGUP_F_main_BB_preheaderi_5)
   Transition: default: LEGUP_F_main_BB_preheaderi_5
state: LEGUP_F_main_BB_preheaderi_5
   %9 = zext i8 %8 to i32 (endState: LEGUP_F_main_BB_preheaderi_5)
   %14 = sub i32 %13, %9 (endState: LEGUP_F_main_BB_preheaderi_5)
   %18 = zext i8 %17 to i32 (endState: LEGUP_F_main_BB_preheaderi_5)
   %19 = sub i32 %14, %18 (endState: LEGUP_F_main_BB_preheaderi_5)
   %20 = sub i32 %9, %18 (endState: LEGUP_F_main_BB_preheaderi_5)
   %22 = load i8* %21, align 1, !tbaa !1 (endState: LEGUP_F_main_BB_preheaderi_6)
   %33 = load i8* %32, align 1, !tbaa !1 (endState: LEGUP_F_main_BB_preheaderi_6)
   Transition: default: LEGUP_F_main_BB_preheaderi_6
state: LEGUP_F_main_BB_preheaderi_6
   %23 = zext i8 %22 to i32 (endState: LEGUP_F_main_BB_preheaderi_6)
   %24 = shl nuw nsw i32 %23, 1 (endState: LEGUP_F_main_BB_preheaderi_6)
   %25 = add nsw i32 %24, %20 (endState: LEGUP_F_main_BB_preheaderi_6)
   %30 = add nsw i32 %29, %25 (endState: LEGUP_F_main_BB_preheaderi_6)
   %34 = zext i8 %33 to i32 (endState: LEGUP_F_main_BB_preheaderi_6)
   %35 = add nsw i32 %34, %19 (endState: LEGUP_F_main_BB_preheaderi_6)
   %36 = add nsw i32 %34, %30 (endState: LEGUP_F_main_BB_preheaderi_6)
   %38 = load i8* %37, align 1, !tbaa !1 (endState: LEGUP_F_main_BB_preheaderi_7)
   %43 = load i8* %42, align 1, !tbaa !1 (endState: LEGUP_F_main_BB_preheaderi_7)
   Transition: default: LEGUP_F_main_BB_preheaderi_7
state: LEGUP_F_main_BB_preheaderi_7
   %39 = zext i8 %38 to i32 (endState: LEGUP_F_main_BB_preheaderi_7)
   %40 = shl nuw nsw i32 %39, 1 (endState: LEGUP_F_main_BB_preheaderi_7)
   %41 = add nsw i32 %40, %35 (endState: LEGUP_F_main_BB_preheaderi_7)
   %44 = zext i8 %43 to i32 (endState: LEGUP_F_main_BB_preheaderi_7)
   %45 = add nsw i32 %44, %41 (endState: LEGUP_F_main_BB_preheaderi_7)
   %46 = sub i32 %36, %44 (endState: LEGUP_F_main_BB_preheaderi_7)
   %47 = icmp slt i32 %45, 0 (endState: LEGUP_F_main_BB_preheaderi_7)
   %48 = sub nsw i32 0, %45 (endState: LEGUP_F_main_BB_preheaderi_7)
   %49 = select i1 %47, i32 %48, i32 %45 (endState: LEGUP_F_main_BB_preheaderi_7)
   %50 = icmp slt i32 %46, 0 (endState: LEGUP_F_main_BB_preheaderi_7)
   %51 = sub nsw i32 0, %46 (endState: LEGUP_F_main_BB_preheaderi_7)
   %52 = select i1 %50, i32 %51, i32 %46 (endState: LEGUP_F_main_BB_preheaderi_7)
   %53 = add nsw i32 %52, %49 (endState: LEGUP_F_main_BB_preheaderi_7)
   %54 = icmp sgt i32 %53, 255 (endState: LEGUP_F_main_BB_preheaderi_7)
   %55 = trunc i32 %53 to i8 (endState: LEGUP_F_main_BB_preheaderi_7)
   Transition: default: LEGUP_F_main_BB_preheaderi_8
state: LEGUP_F_main_BB_preheaderi_8
   %56 = select i1 %54, i8 -1, i8 %55 (endState: LEGUP_F_main_BB_preheaderi_8)
   store i8 %56, i8* %57, align 1, !tbaa !1 (endState: LEGUP_F_main_BB_preheaderi_9)
   Transition: default: LEGUP_F_main_BB_preheaderi_9
state: LEGUP_F_main_BB_preheaderi_9
   br i1 %exitcond9, label %.preheader.preheader, label %.preheader..preheader_crit_edge.i
   Transition: if (%exitcond9): LEGUP_F_main_BB_preheaderpreheader_10 default: LEGUP_F_main_BB_preheaderpreheader_crit_edgei_11
state: LEGUP_F_main_BB_preheaderpreheader_10
   br label %.preheader
   Transition: default: LEGUP_F_main_BB_preheader_12
state: LEGUP_F_main_BB_preheaderpreheader_crit_edgei_11
   %indvar.next8 = add i32 %indvar7, 1 (endState: LEGUP_F_main_BB_preheaderpreheader_crit_edgei_11)
   br label %.preheader.i
   Transition: default: LEGUP_F_main_BB_preheaderi_2
state: LEGUP_F_main_BB_preheader_12
   %indvar2 = phi i32 [ 0, %.preheader.preheader ], [ %indvar.next3, %64 ] (endState: LEGUP_F_main_BB_preheader_12)
   %result.03 = phi i32 [ 0, %.preheader.preheader ], [ %result.1., %64 ] (endState: LEGUP_F_main_BB_preheader_12)
   %58 = add i32 %indvar2, 1 (endState: LEGUP_F_main_BB_preheader_12)
   br label %59
   Transition: default: LEGUP_F_main_BB__59_13
state: LEGUP_F_main_BB__59_13
   %indvar = phi i32 [ %indvar.next, %59 ], [ 0, %.preheader ] (endState: LEGUP_F_main_BB__59_13)
   %result.11 = phi i32 [ %result.1., %59 ], [ %result.03, %.preheader ] (endState: LEGUP_F_main_BB__59_13)
   %60 = add i32 %indvar, 1 (endState: LEGUP_F_main_BB__59_13)
   %indvar.next = add i32 %indvar, 1 (endState: LEGUP_F_main_BB__59_13)
   %exitcond1 = icmp eq i32 %indvar.next, 510 (endState: LEGUP_F_main_BB__59_13)
   Transition: default: LEGUP_F_main_BB__59_14
state: LEGUP_F_main_BB__59_14
   %scevgep4 = getelementptr [512 x [512 x i8]]* %sobel_output, i32 0, i32 %58, i32 %60 (endState: LEGUP_F_main_BB__59_14)
   %scevgep = getelementptr [512 x [512 x i8]]* @elaine_512_golden_output, i32 0, i32 %58, i32 %60 (endState: LEGUP_F_main_BB__59_14)
   %61 = load i8* %scevgep4, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__59_15)
   %62 = load i8* %scevgep, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__59_15)
   Transition: default: LEGUP_F_main_BB__59_15
state: LEGUP_F_main_BB__59_15
   %not. = icmp ne i8 %61, %62 (endState: LEGUP_F_main_BB__59_15)
   %63 = zext i1 %not. to i32 (endState: LEGUP_F_main_BB__59_15)
   %result.1. = add nsw i32 %63, %result.11 (endState: LEGUP_F_main_BB__59_15)
   br i1 %exitcond1, label %64, label %59
   Transition: if (%exitcond1): LEGUP_F_main_BB__64_16 default: LEGUP_F_main_BB__59_13
state: LEGUP_F_main_BB__64_16
   %indvar.next3 = add i32 %indvar2, 1 (endState: LEGUP_F_main_BB__64_16)
   %exitcond = icmp eq i32 %indvar.next3, 510 (endState: LEGUP_F_main_BB__64_16)
   br i1 %exitcond, label %65, label %.preheader
   Transition: if (%exitcond): LEGUP_F_main_BB__65_17 default: LEGUP_F_main_BB_preheader_12
state: LEGUP_F_main_BB__65_17
   %66 = icmp eq i32 %result.1., 0 (endState: LEGUP_F_main_BB__65_17)
   br i1 %66, label %67, label %69
   Transition: if (%66): LEGUP_F_main_BB__67_18 default: LEGUP_F_main_BB__69_19
state: LEGUP_F_main_BB__67_18
   %68 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([7 x i8]* @.str1, i32 0, i32 0)) #2 (endState: LEGUP_F_main_BB__67_18)
   br label %71
   Transition: default: LEGUP_F_main_BB__71_20
state: LEGUP_F_main_BB__69_19
   %70 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([26 x i8]* @.str2, i32 0, i32 0), i32 %result.1.) #2 (endState: LEGUP_F_main_BB__69_19)
   br label %71
   Transition: default: LEGUP_F_main_BB__71_20
state: LEGUP_F_main_BB__71_20
   ret i32 %result.1.
   Transition: default: LEGUP_0

Basic Block: %64 Num States: 1
Basic Block: %65 Num States: 1
Basic Block: %67 Num States: 1
Basic Block: %69 Num States: 1
Basic Block: %71 Num States: 1
Basic Block: %.preheader.i Num States: 8
Basic Block: %.preheader.preheader Num States: 1
Basic Block: %.preheader..preheader_crit_edge.i Num States: 1
Basic Block: %.preheader Num States: 1
Basic Block: %59 Num States: 3
Basic Block: %0 Num States: 1
End Function: main
--------------------------------------------------------------------------------

