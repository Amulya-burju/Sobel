--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=32 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 15.0 cbx_cycloneii 2015:04:15:19:11:39:SJ cbx_lpm_add_sub 2015:04:15:19:11:39:SJ cbx_lpm_compare 2015:04:15:19:11:39:SJ cbx_lpm_decode 2015:04:15:19:11:39:SJ cbx_mgl 2015:04:15:20:18:26:SJ cbx_stratix 2015:04:15:19:11:39:SJ cbx_stratixii 2015:04:15:19:11:39:SJ  VERSION_END


-- Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus II License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_sma
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[31..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[31..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode3359w[2..0]	: WIRE;
	w_anode3372w[3..0]	: WIRE;
	w_anode3389w[3..0]	: WIRE;
	w_anode3399w[3..0]	: WIRE;
	w_anode3409w[3..0]	: WIRE;
	w_anode3419w[3..0]	: WIRE;
	w_anode3429w[3..0]	: WIRE;
	w_anode3439w[3..0]	: WIRE;
	w_anode3449w[3..0]	: WIRE;
	w_anode3461w[2..0]	: WIRE;
	w_anode3470w[3..0]	: WIRE;
	w_anode3481w[3..0]	: WIRE;
	w_anode3491w[3..0]	: WIRE;
	w_anode3501w[3..0]	: WIRE;
	w_anode3511w[3..0]	: WIRE;
	w_anode3521w[3..0]	: WIRE;
	w_anode3531w[3..0]	: WIRE;
	w_anode3541w[3..0]	: WIRE;
	w_anode3552w[2..0]	: WIRE;
	w_anode3561w[3..0]	: WIRE;
	w_anode3572w[3..0]	: WIRE;
	w_anode3582w[3..0]	: WIRE;
	w_anode3592w[3..0]	: WIRE;
	w_anode3602w[3..0]	: WIRE;
	w_anode3612w[3..0]	: WIRE;
	w_anode3622w[3..0]	: WIRE;
	w_anode3632w[3..0]	: WIRE;
	w_anode3643w[2..0]	: WIRE;
	w_anode3652w[3..0]	: WIRE;
	w_anode3663w[3..0]	: WIRE;
	w_anode3673w[3..0]	: WIRE;
	w_anode3683w[3..0]	: WIRE;
	w_anode3693w[3..0]	: WIRE;
	w_anode3703w[3..0]	: WIRE;
	w_anode3713w[3..0]	: WIRE;
	w_anode3723w[3..0]	: WIRE;
	w_data3357w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[31..0] = eq_wire[31..0];
	eq_wire[] = ( ( w_anode3723w[3..3], w_anode3713w[3..3], w_anode3703w[3..3], w_anode3693w[3..3], w_anode3683w[3..3], w_anode3673w[3..3], w_anode3663w[3..3], w_anode3652w[3..3]), ( w_anode3632w[3..3], w_anode3622w[3..3], w_anode3612w[3..3], w_anode3602w[3..3], w_anode3592w[3..3], w_anode3582w[3..3], w_anode3572w[3..3], w_anode3561w[3..3]), ( w_anode3541w[3..3], w_anode3531w[3..3], w_anode3521w[3..3], w_anode3511w[3..3], w_anode3501w[3..3], w_anode3491w[3..3], w_anode3481w[3..3], w_anode3470w[3..3]), ( w_anode3449w[3..3], w_anode3439w[3..3], w_anode3429w[3..3], w_anode3419w[3..3], w_anode3409w[3..3], w_anode3399w[3..3], w_anode3389w[3..3], w_anode3372w[3..3]));
	w_anode3359w[] = ( (w_anode3359w[1..1] & (! data_wire[4..4])), (w_anode3359w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3372w[] = ( (w_anode3372w[2..2] & (! w_data3357w[2..2])), (w_anode3372w[1..1] & (! w_data3357w[1..1])), (w_anode3372w[0..0] & (! w_data3357w[0..0])), w_anode3359w[2..2]);
	w_anode3389w[] = ( (w_anode3389w[2..2] & (! w_data3357w[2..2])), (w_anode3389w[1..1] & (! w_data3357w[1..1])), (w_anode3389w[0..0] & w_data3357w[0..0]), w_anode3359w[2..2]);
	w_anode3399w[] = ( (w_anode3399w[2..2] & (! w_data3357w[2..2])), (w_anode3399w[1..1] & w_data3357w[1..1]), (w_anode3399w[0..0] & (! w_data3357w[0..0])), w_anode3359w[2..2]);
	w_anode3409w[] = ( (w_anode3409w[2..2] & (! w_data3357w[2..2])), (w_anode3409w[1..1] & w_data3357w[1..1]), (w_anode3409w[0..0] & w_data3357w[0..0]), w_anode3359w[2..2]);
	w_anode3419w[] = ( (w_anode3419w[2..2] & w_data3357w[2..2]), (w_anode3419w[1..1] & (! w_data3357w[1..1])), (w_anode3419w[0..0] & (! w_data3357w[0..0])), w_anode3359w[2..2]);
	w_anode3429w[] = ( (w_anode3429w[2..2] & w_data3357w[2..2]), (w_anode3429w[1..1] & (! w_data3357w[1..1])), (w_anode3429w[0..0] & w_data3357w[0..0]), w_anode3359w[2..2]);
	w_anode3439w[] = ( (w_anode3439w[2..2] & w_data3357w[2..2]), (w_anode3439w[1..1] & w_data3357w[1..1]), (w_anode3439w[0..0] & (! w_data3357w[0..0])), w_anode3359w[2..2]);
	w_anode3449w[] = ( (w_anode3449w[2..2] & w_data3357w[2..2]), (w_anode3449w[1..1] & w_data3357w[1..1]), (w_anode3449w[0..0] & w_data3357w[0..0]), w_anode3359w[2..2]);
	w_anode3461w[] = ( (w_anode3461w[1..1] & (! data_wire[4..4])), (w_anode3461w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3470w[] = ( (w_anode3470w[2..2] & (! w_data3357w[2..2])), (w_anode3470w[1..1] & (! w_data3357w[1..1])), (w_anode3470w[0..0] & (! w_data3357w[0..0])), w_anode3461w[2..2]);
	w_anode3481w[] = ( (w_anode3481w[2..2] & (! w_data3357w[2..2])), (w_anode3481w[1..1] & (! w_data3357w[1..1])), (w_anode3481w[0..0] & w_data3357w[0..0]), w_anode3461w[2..2]);
	w_anode3491w[] = ( (w_anode3491w[2..2] & (! w_data3357w[2..2])), (w_anode3491w[1..1] & w_data3357w[1..1]), (w_anode3491w[0..0] & (! w_data3357w[0..0])), w_anode3461w[2..2]);
	w_anode3501w[] = ( (w_anode3501w[2..2] & (! w_data3357w[2..2])), (w_anode3501w[1..1] & w_data3357w[1..1]), (w_anode3501w[0..0] & w_data3357w[0..0]), w_anode3461w[2..2]);
	w_anode3511w[] = ( (w_anode3511w[2..2] & w_data3357w[2..2]), (w_anode3511w[1..1] & (! w_data3357w[1..1])), (w_anode3511w[0..0] & (! w_data3357w[0..0])), w_anode3461w[2..2]);
	w_anode3521w[] = ( (w_anode3521w[2..2] & w_data3357w[2..2]), (w_anode3521w[1..1] & (! w_data3357w[1..1])), (w_anode3521w[0..0] & w_data3357w[0..0]), w_anode3461w[2..2]);
	w_anode3531w[] = ( (w_anode3531w[2..2] & w_data3357w[2..2]), (w_anode3531w[1..1] & w_data3357w[1..1]), (w_anode3531w[0..0] & (! w_data3357w[0..0])), w_anode3461w[2..2]);
	w_anode3541w[] = ( (w_anode3541w[2..2] & w_data3357w[2..2]), (w_anode3541w[1..1] & w_data3357w[1..1]), (w_anode3541w[0..0] & w_data3357w[0..0]), w_anode3461w[2..2]);
	w_anode3552w[] = ( (w_anode3552w[1..1] & data_wire[4..4]), (w_anode3552w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3561w[] = ( (w_anode3561w[2..2] & (! w_data3357w[2..2])), (w_anode3561w[1..1] & (! w_data3357w[1..1])), (w_anode3561w[0..0] & (! w_data3357w[0..0])), w_anode3552w[2..2]);
	w_anode3572w[] = ( (w_anode3572w[2..2] & (! w_data3357w[2..2])), (w_anode3572w[1..1] & (! w_data3357w[1..1])), (w_anode3572w[0..0] & w_data3357w[0..0]), w_anode3552w[2..2]);
	w_anode3582w[] = ( (w_anode3582w[2..2] & (! w_data3357w[2..2])), (w_anode3582w[1..1] & w_data3357w[1..1]), (w_anode3582w[0..0] & (! w_data3357w[0..0])), w_anode3552w[2..2]);
	w_anode3592w[] = ( (w_anode3592w[2..2] & (! w_data3357w[2..2])), (w_anode3592w[1..1] & w_data3357w[1..1]), (w_anode3592w[0..0] & w_data3357w[0..0]), w_anode3552w[2..2]);
	w_anode3602w[] = ( (w_anode3602w[2..2] & w_data3357w[2..2]), (w_anode3602w[1..1] & (! w_data3357w[1..1])), (w_anode3602w[0..0] & (! w_data3357w[0..0])), w_anode3552w[2..2]);
	w_anode3612w[] = ( (w_anode3612w[2..2] & w_data3357w[2..2]), (w_anode3612w[1..1] & (! w_data3357w[1..1])), (w_anode3612w[0..0] & w_data3357w[0..0]), w_anode3552w[2..2]);
	w_anode3622w[] = ( (w_anode3622w[2..2] & w_data3357w[2..2]), (w_anode3622w[1..1] & w_data3357w[1..1]), (w_anode3622w[0..0] & (! w_data3357w[0..0])), w_anode3552w[2..2]);
	w_anode3632w[] = ( (w_anode3632w[2..2] & w_data3357w[2..2]), (w_anode3632w[1..1] & w_data3357w[1..1]), (w_anode3632w[0..0] & w_data3357w[0..0]), w_anode3552w[2..2]);
	w_anode3643w[] = ( (w_anode3643w[1..1] & data_wire[4..4]), (w_anode3643w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3652w[] = ( (w_anode3652w[2..2] & (! w_data3357w[2..2])), (w_anode3652w[1..1] & (! w_data3357w[1..1])), (w_anode3652w[0..0] & (! w_data3357w[0..0])), w_anode3643w[2..2]);
	w_anode3663w[] = ( (w_anode3663w[2..2] & (! w_data3357w[2..2])), (w_anode3663w[1..1] & (! w_data3357w[1..1])), (w_anode3663w[0..0] & w_data3357w[0..0]), w_anode3643w[2..2]);
	w_anode3673w[] = ( (w_anode3673w[2..2] & (! w_data3357w[2..2])), (w_anode3673w[1..1] & w_data3357w[1..1]), (w_anode3673w[0..0] & (! w_data3357w[0..0])), w_anode3643w[2..2]);
	w_anode3683w[] = ( (w_anode3683w[2..2] & (! w_data3357w[2..2])), (w_anode3683w[1..1] & w_data3357w[1..1]), (w_anode3683w[0..0] & w_data3357w[0..0]), w_anode3643w[2..2]);
	w_anode3693w[] = ( (w_anode3693w[2..2] & w_data3357w[2..2]), (w_anode3693w[1..1] & (! w_data3357w[1..1])), (w_anode3693w[0..0] & (! w_data3357w[0..0])), w_anode3643w[2..2]);
	w_anode3703w[] = ( (w_anode3703w[2..2] & w_data3357w[2..2]), (w_anode3703w[1..1] & (! w_data3357w[1..1])), (w_anode3703w[0..0] & w_data3357w[0..0]), w_anode3643w[2..2]);
	w_anode3713w[] = ( (w_anode3713w[2..2] & w_data3357w[2..2]), (w_anode3713w[1..1] & w_data3357w[1..1]), (w_anode3713w[0..0] & (! w_data3357w[0..0])), w_anode3643w[2..2]);
	w_anode3723w[] = ( (w_anode3723w[2..2] & w_data3357w[2..2]), (w_anode3723w[1..1] & w_data3357w[1..1]), (w_anode3723w[0..0] & w_data3357w[0..0]), w_anode3643w[2..2]);
	w_data3357w[2..0] = data_wire[2..0];
END;
--VALID FILE
